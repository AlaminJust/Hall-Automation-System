@model MyApp.Models.RegistrationFormModel

@{
    ViewBag.Title = "RegistrationForm";
}

@if (ViewBag.Success != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Success");
            };
    </script>
}



    <div class="container mt-3">
        <div class="row">
            <div class="col-md-7 offset-lg-2 offset-md-2 offset-sm-3">
                <div class="card ">
                    
                        <h2 class="display-5 text-center card-header bg-info text-white mb-1">
                            <strong> Registration</strong>
                        </h2>

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                            
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.UserName)*@
                                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control",@placeholder="User Name" } })
                                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.StudentName)*@
                                        @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control",@placeholder="Student Name" } })
                                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.DeptName)*@
                                        @Html.EditorFor(model => model.DeptName, new { htmlAttributes = new { @class = "form-control",@placeholder="Department Name" } })
                                        @Html.ValidationMessageFor(model => model.DeptName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.RollNumber)*@
                                        @Html.EditorFor(model => model.RollNumber, new { htmlAttributes = new { @class = "form-control",@placeholder="Roll Number" } })
                                        @Html.ValidationMessageFor(model => model.RollNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.Session)*@
                                        @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control",@placeholder="Session" } })
                                        @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.Password)*@
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control",@placeholder="Password", @type="password" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.ConfirmPassowrd)*@
                                        @Html.EditorFor(model => model.ConfirmPassowrd, new { htmlAttributes = new { @class = "form-control",@placeholder="Confirm Password", @type="password" } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassowrd, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <div class="col-md-10 offset-lg-3 offset-md-1 offset-sm-2">
                                        @*@Html.LabelFor(model => model.Email)*@
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control",@placeholder="Email" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    @Html.LabelFor(model => model.IsVerified, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.IsVerified, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.IsVerified, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-10 offset-md-1 offset-lg-3 offset-sm-2 ">
                                        <input type="submit" value="Sign UP" class="btn btn-primary btn-block" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    


@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
